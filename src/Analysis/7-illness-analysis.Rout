
R version 3.1.3 (2015-03-09) -- "Smooth Sidewalk"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ##########################################
> # Coliphage analysis - 6 beaches
> # v1 by Jade 11/3/15
> 
> # Illness figures for main text
> ##########################################
> 
> rm(list=ls())
> 
> # --------------------------------------
> # load the and pre-preprocess the 
> # analysis dataset
> # (refer to the base functions script
> # for details on the pre-processing)
> # --------------------------------------
> beaches13=read.csv("~/Documents/CRG/coliphage/13beaches-data/final/13beaches-analysis.csv")
> 
> # load base functions
> source("~/Documents/CRG/coliphage/13beaches-coliphage/src/Analysis/0-base-functions.R")
> 
> data=preprocess.6beaches(beaches13)

Successfully loaded the data
 Total sample size = 84411 

Dropping individuals with GI illness at enrollment
 N = 1948 

Final sample size = 82463 

Subsetting the data to relevant variables and completing final variable pre-processing> 
> # restrict to 6 beaches with coliphage data
> beach.list=c("Avalon","Doheny","Malibu","Mission Bay",
+              "Fairhope","Goddard")
> 
> all=data[data$beach %in% beach.list,]
> 
> # drop individuals with no water quality information
> all=subset(all,nowq==0)
> 
> # --------------------------------------
> # illness rates
> # --------------------------------------
> # illness rates among all enrollees
> table(all$gici10)

    0     1 
31091  2170 
> prop.table(table(all$gici10))

         0          1 
0.93475843 0.06524157 
> prop.table(table(all$gici10,all$beach),2)
   
        Avalon Boqueron     Doheny Edgewater   Fairhope    Goddard Huntington
  0 0.93031123          0.94358578           0.91805766 0.95185313           
  1 0.06968877          0.05641422           0.08194234 0.04814687           
   
        Malibu Mission Bay Silver Surfside Washington Park West
  0 0.93285199  0.92722201                                     
  1 0.06714801  0.07277799                                     
> 
> # illness rates among swimmers
> table(all$gici10[all$bodycontact=="Yes"])

    0     1 
14171  1105 
> prop.table(table(all$gici10[all$bodycontact=="Yes"]))

         0          1 
0.92766431 0.07233569 
> prop.table(table(all$gici10[all$bodycontact=="Yes"],all$beach[all$bodycontact=="Yes"]),2)
   
        Avalon Boqueron     Doheny Edgewater   Fairhope    Goddard Huntington
  0 0.92679669          0.93566265           0.90965347 0.93815414           
  1 0.07320331          0.06433735           0.09034653 0.06184586           
   
        Malibu Mission Bay Silver Surfside Washington Park West
  0 0.92645883  0.91992058                                     
  1 0.07354117  0.08007942                                     
> 
> # illness rates among non-swimmers
> table(all$gici10[all$bodycontact=="No"])

    0     1 
16920  1065 
> prop.table(table(all$gici10[all$bodycontact=="No"]))

         0          1 
0.94078399 0.05921601 
> prop.table(table(all$gici10[all$bodycontact=="No"],all$beach[all$bodycontact=="No"]),2)
   
        Avalon Boqueron     Doheny Edgewater   Fairhope    Goddard Huntington
  0 0.93637621          0.95028525           0.92386655 0.95969499           
  1 0.06362379          0.04971475           0.07613345 0.04030501           
   
        Malibu Mission Bay Silver Surfside Washington Park West
  0 0.93811718  0.93175745                                     
  1 0.06188282  0.06824255                                     
> 
> 
> # --------------------------------------
> # regression for swimming only
> # --------------------------------------
> swim.reg=glm(gici10~bodycontact+agecat+female+racewhite+gichron+anim_any+gicontactbase+
+   rawfood+beach,family=poisson(link="log"),data=all)
> # CIR for swimming
> exp(swim.reg$coef[["bodycontactYes"]])
[1] 1.244376
> exp(swim.reg$coef[["bodycontactYes"]]-
+       qnorm(.975)*summary(swim.reg)$coefficients[2,2])
[1] 1.135369
> exp(swim.reg$coef[["bodycontactYes"]]+
+       qnorm(.975)*summary(swim.reg)$coefficients[2,2])
[1] 1.363849
> 
> swimrisk.reg=glm(gici10~bodycontact*risk+agecat+female+racewhite+gichron+anim_any+gicontactbase+
+   rawfood+beach,family=poisson(link="log"),data=all)
> # CIR for swimming under high risk
> exp(swimrisk.reg$coef[["bodycontactYes"]]+
+     swimrisk.reg$coef[["bodycontactYes:riskHigh"]])
[1] 1.147975
> 
> # CIR for swimming under low risk
> exp(swimrisk.reg$coef[["bodycontactYes"]])
[1] 1.287593
> 
> lrtest(swim.reg,swimrisk.reg)
Error: could not find function "lrtest"
Execution halted
