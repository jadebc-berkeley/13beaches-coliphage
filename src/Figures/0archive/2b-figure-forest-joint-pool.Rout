
R version 3.1.3 (2015-03-09) -- "Smooth Sidewalk"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ##########################################
> # Coliphage analysis - 6 beaches
> # v1 by Jade 7/13/15
> 
> # Forest plot of CIRs for joint indicators
> 
> # Results pooled by assay and beach
> ##########################################
> 
> 
> rm(list=ls())
> library(ggplot2)
> library(plyr)
> library(scales)
> library(grid)
> 
> load("~/dropbox/coliphage/results/rawoutput/regress-10day-body-joint-pool.Rdata")  
> load("~/dropbox/coliphage/results/rawoutput/regress-10day-body-entero-pool.Rdata")
> 
> source("~/dropbox/coliphage/programs/figures/theme_complete_bw.R")
> 
> # ------------------------------------------------
> # function to make table row with exponentiated point estimate
> # and 95% ci in parentheses
> # ------------------------------------------------
> mkdf=function(out){
+   row=grep("ent4",rownames(out))
+   pt.est=out[row,1]
+   lb=pt.est-qnorm(.975)*out[4,2]
+   ub=pt.est+qnorm(.975)*out[4,2]
+   data.frame(pt.est=exp(pt.est),lb=exp(lb),ub=exp(ub))
+ }
> 
> mkdf.ent=function(out){
+   pt.est=out[2,1]
+   lb=pt.est-qnorm(.975)*out[2,2]
+   ub=pt.est+qnorm(.975)*out[2,2]
+   data.frame(pt.est=exp(pt.est),lb=exp(lb),ub=exp(ub))
+ }
> 
> 
> # ------------------------------------------------
> # combine output
> # ------------------------------------------------
> gici10.body.int=list(overall.fit10.fmc.int, overall.fit10.fpc.int)
> gici10.body.high.int=list(overall.fit10.fmc.high.int, overall.fit10.fpc.high.int)
> gici10.body.low.int=list(overall.fit10.fmc.low.int, overall.fit10.fpc.low.int)
> 
> # entero results
> gici10.entero.pool=list(overall.fit10.entero.fmc,overall.fit10.entero.fpc)
> gici10.entero.high=list(overall.fit10.entero.high.fmc,overall.fit10.entero.high.fpc)
> gici10.entero.low=list(overall.fit10.entero.low.fmc,overall.fit10.entero.low.fpc)
>   
> 
> # ------------------------------------------------
> # format output
> # ------------------------------------------------
> gici10.plot.int=ldply(lapply(gici10.body.int,mkdf),data.frame)
> gici10.plot.high=ldply(lapply(gici10.body.high.int,mkdf),data.frame)
> gici10.plot.low=ldply(lapply(gici10.body.low.int,mkdf),data.frame)
> 
> gici10.plot.entero.pool=ldply(lapply(gici10.entero.pool,mkdf.ent),data.frame)
> gici10.plot.entero.high=ldply(lapply(gici10.entero.high,mkdf.ent),data.frame)
> gici10.plot.entero.low=ldply(lapply(gici10.entero.low,mkdf.ent),data.frame)
> 
> # combine results into one data frame
> gici10.plot=rbind(gici10.plot.int,gici10.plot.high,gici10.plot.low,
+   gici10.plot.entero.pool,gici10.plot.entero.high,gici10.plot.entero.low)
> 
> gici10.plot$lab=as.factor(rep(c(rep("All conditions",2),rep("High risk conditions",2),
+                   rep("Low risk conditions",2)),2))
> 
> gici10.plot$ind=as.factor(rep(c("F- Coliphage","F+ Coliphage"),6))
> 
> gici10.plot$type=as.factor(c(rep("Coliphage detected &\nEnterococcus > 35 CFU/100 ml",6),
+                              rep("Enterococcus > 35 CFU/100 ml",6)))
> gici10.plot$type.f <- factor(gici10.plot$type, levels=rev(levels(gici10.plot$type)) )
> 
> # order beach factor
> gici10.plot$ind.f=factor(gici10.plot$ind,
+             levels=c("F- Coliphage","F+ Coliphage"))
> 
> # order panels
> gici10.plot$lab.f=factor(gici10.plot$lab,levels=c("High risk conditions",
+         "Low risk conditions","All conditions"))
> 
> forest.joint=ggplot(gici10.plot,aes(x=lab.f,y=pt.est))+
+   geom_errorbar(aes(ymin=lb,ymax=ub,color=type.f),width=0.3,
+                 position=position_dodge(width=0.4))+
+   facet_wrap(~ind.f,ncol=4)+
+   geom_point(aes(color=type.f,shape=type.f),position=position_dodge(width=0.4))+
+   coord_flip()+geom_hline(yintercept=1,linetype="dotted")+
+   scale_color_manual("",breaks=rev(levels(gici10.plot$type.f)),values=c("#0066FF","black"))+
+   scale_shape_manual("",breaks=rev(levels(gici10.plot$type.f)),values=c(17,19))+  
+   scale_y_log10(breaks=c(0.2,0.5,1,2),limits=c(0.3,3))+theme_complete_bw()+
+   ylab("Cumulative incidence ratio (95% CI)")+xlab("")+
+   ggtitle("Joint indicators")
> 
> save(forest.joint,file="~/dropbox/coliphage/results/rawoutput/gg_forest_joint_pool.RData")
> 
> 
> 
> proc.time()
   user  system elapsed 
  0.919   0.045   1.047 
